<<<<<<< HEAD
server {
    listen 80;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }
}
=======
# HTTP 요청을 HTTPS로 리디렉션
server {
    listen 80;
    server_name t1217.p.ssafy.io ssafygwangjuc1.duckdns.org;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS 설정
server {
    listen 443 ssl;
    server_name t1217.p.ssafy.io ssafygwangjuc1.duckdns.org;
    server_tokens off;

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/t1217.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/t1217.p.ssafy.io/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # React 프론트엔드 (Nginx를 통해 제공)
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
    }

    # Spring Boot 백엔드 API 프록시
    location /api/ {
        proxy_pass http://localhost:8081/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
    }

    # Jenkins 프록시 설정
    location /jenkins/ {
        proxy_pass http://localhost:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
        # Jenkins 프록시를 위한 요청 헤더 추가
        proxy_set_header X-Forwarded-Context /jenkins;
    }
}
>>>>>>> b291179599e73a308ab1e080a94c54d479fdc6e3
